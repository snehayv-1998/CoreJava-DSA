package arrayAndHashing;

import java.util.Arrays;
import java.util.HashMap;

public class MissingAndRepeatingElement {
    public static void main(String[] args) {
        /*
        https://leetcode.com/problems/find-missing-and-repeated-values/description/
         */

        System.out.println("findMissingAndRepeatedValues :" + Arrays.toString(findMissingAndRepeatedValues(new int[][]{{488,291,997,65,1167,465,46,1020,352,1134,1004,1211,276,798,191,363,379,1235,215,788,1175,432,561,1070,414,386,1028,647,702,1155,680,747,741,217,239,860},{1093,1104,1095,902,586,744,954,426,866,604,505,305,927,325,12,1024,641,994,343,568,166,922,442,210,969,1268,742,495,1121,1210,852,550,1197,689,698,820},{703,926,1152,372,368,1096,1242,809,452,421,99,1273,527,434,445,112,59,156,854,320,167,991,720,714,644,1046,1194,528,1127,14,875,815,705,951,241,848},{903,311,199,303,722,847,583,218,450,1058,253,170,1037,225,896,898,621,202,437,280,335,1248,1110,609,786,1269,995,29,889,739,1082,1146,1260,378,789,387},{258,1292,58,1101,753,1001,1276,671,608,471,1237,555,433,21,314,92,869,49,569,256,196,921,435,867,876,783,356,13,1033,813,165,664,1140,1023,532,800},{249,338,571,184,439,479,863,227,148,43,515,1149,1293,565,1040,872,39,31,281,732,177,1120,731,827,398,1088,819,706,155,1107,68,336,770,248,885,341},{1192,232,849,42,103,977,626,1295,48,713,1207,825,81,122,845,186,496,914,429,554,312,993,1274,659,924,420,211,1132,493,152,73,949,658,35,805,743},{690,971,605,1231,588,1196,293,904,1278,283,171,538,212,663,1078,353,1202,785,1106,595,616,120,1253,1277,769,111,8,159,521,1057,776,612,315,1112,34,1010},{1,987,455,723,1067,721,203,966,972,365,151,179,109,594,708,649,504,487,1282,1065,1136,438,444,44,143,403,1063,1261,192,961,627,524,128,653,456,28},{1048,701,618,839,279,856,364,76,277,762,548,11,923,513,607,628,579,737,24,958,1080,357,1109,711,877,970,613,257,448,154,749,413,1113,529,724,1247},{61,1203,572,780,519,846,712,883,265,1148,235,629,1286,377,919,198,1290,1079,474,740,224,251,984,570,651,56,1224,625,173,226,409,84,719,1201,116,709},{431,220,459,454,394,826,758,205,683,137,160,245,69,375,552,139,945,101,497,823,850,395,295,422,136,423,292,931,355,349,935,502,699,176,106,1019},{657,679,60,1081,748,301,940,332,1118,240,418,745,694,20,734,1008,102,1085,864,233,26,1090,1221,810,976,1144,832,1069,766,1223,1212,916,1226,1285,41,1068},{861,886,9,672,959,752,1022,333,149,1125,204,640,1030,980,1076,535,620,74,755,999,1122,1115,10,478,677,246,562,415,1172,1164,556,1165,480,412,537,1234},{1017,523,768,1198,509,6,1018,836,419,772,835,469,735,1174,900,359,316,803,1043,482,802,981,286,553,23,324,1131,557,933,1014,1003,808,40,330,1262,592},{209,530,1156,110,285,473,95,425,362,270,533,950,710,536,1243,1126,346,1189,164,868,1161,937,508,873,725,693,405,123,784,656,79,717,584,727,1129,77},{542,1153,499,880,491,3,1208,467,581,1255,1291,282,1264,894,1130,506,168,1296,760,1050,1139,632,131,1166,127,385,1049,138,988,296,510,1191,1071,589,1186,862},{1176,178,1005,464,1094,597,844,213,1098,298,88,63,1279,634,86,531,118,962,516,1064,1199,881,361,1195,446,915,1219,946,796,1183,637,388,908,676,85,83},{389,1062,992,1041,1250,121,591,715,622,223,373,882,1002,1259,1181,503,94,194,317,928,463,729,400,472,1215,147,326,424,1141,855,567,172,1179,1061,254,930},{289,956,252,746,610,141,416,1145,208,1044,96,1053,1074,161,982,799,461,590,1072,1214,645,944,642,91,1241,383,559,462,818,577,153,512,206,901,1187,775},{1075,545,1123,1205,294,183,134,1232,284,606,1257,633,1173,1099,318,1091,871,1209,214,158,534,764,1025,1251,814,736,511,38,726,1111,1000,197,580,119,80,1188},{396,1230,681,180,668,957,636,185,470,72,5,507,1045,700,1031,1011,193,834,843,801,1007,89,907,1206,113,754,1216,1184,765,603,70,310,71,201,540,837},{639,460,4,643,33,952,964,1150,327,756,1169,331,384,1159,718,238,47,237,250,691,998,576,878,1089,687,269,187,1128,859,1117,599,575,1066,1190,195,774},{441,242,913,879,261,1238,297,787,738,1015,1077,1135,955,611,1097,560,380,1284,107,675,874,390,1275,692,466,953,129,909,498,1036,350,526,1271,911,1006,1240},{447,50,782,105,716,481,1266,830,804,1244,345,965,1083,707,593,630,1287,674,288,912,354,751,45,517,299,686,1021,145,19,858,790,16,1032,2,255,1124},{696,518,773,990,328,313,351,1092,32,793,1084,985,1294,1227,781,934,108,334,90,831,230,259,1272,1073,771,623,888,585,402,401,817,453,684,906,899,996},{811,522,125,1288,1182,1034,525,1200,925,440,601,428,646,840,932,1193,1026,1158,563,941,1204,1154,1256,1105,411,234,974,1170,1246,181,146,918,300,406,162,126},{64,929,272,1060,458,306,942,133,989,27,200,229,268,321,222,806,967,1102,1100,549,468,853,1222,115,917,366,1270,791,53,635,1103,140,667,287,1168,573},{1178,598,948,399,1147,182,890,910,1171,278,1252,1039,1138,266,1185,1142,190,382,887,841,865,1086,1029,1055,655,893,828,100,779,484,449,812,157,271,685,665},{1027,150,169,821,393,979,884,1119,1265,1047,62,1229,243,638,795,892,360,397,98,340,631,1233,1009,688,652,490,986,564,695,761,267,427,260,1151,586,673},{1087,124,838,973,666,778,1220,600,1056,494,669,943,264,842,1263,794,1035,163,947,566,457,188,307,483,339,369,662,67,544,614,25,189,87,309,51,975},{1114,329,392,777,661,822,905,807,175,660,144,1217,983,486,174,938,66,547,358,55,897,624,759,436,939,443,262,763,82,543,891,37,370,344,551,1258},{617,348,824,93,678,1162,219,142,308,1042,895,302,342,1225,1163,546,417,430,228,391,730,381,870,1143,733,1245,968,1013,697,1254,371,767,587,263,558,477},{578,1108,728,367,1228,833,54,1137,275,52,539,322,704,857,978,514,1038,1116,1289,244,15,1239,1012,1236,404,1213,1016,475,117,410,963,757,920,541,374,1157},{1249,376,290,602,615,670,231,489,135,596,75,1051,582,1133,492,476,648,97,1218,22,829,323,407,1054,274,347,1267,1059,1180,1177,750,104,408,337,960,1283},{207,30,18,132,221,78,619,654,1052,273,851,57,1160,816,304,1280,520,682,792,17,451,236,36,319,650,797,216,1281,936,130,485,501,500,247,114,574}})));
        System.out.println("missingAndRepeat :" + Arrays.toString(missingAndRepeat(new int[][]{{488,291,997,65,1167,465,46,1020,352,1134,1004,1211,276,798,191,363,379,1235,215,788,1175,432,561,1070,414,386,1028,647,702,1155,680,747,741,217,239,860},{1093,1104,1095,902,586,744,954,426,866,604,505,305,927,325,12,1024,641,994,343,568,166,922,442,210,969,1268,742,495,1121,1210,852,550,1197,689,698,820},{703,926,1152,372,368,1096,1242,809,452,421,99,1273,527,434,445,112,59,156,854,320,167,991,720,714,644,1046,1194,528,1127,14,875,815,705,951,241,848},{903,311,199,303,722,847,583,218,450,1058,253,170,1037,225,896,898,621,202,437,280,335,1248,1110,609,786,1269,995,29,889,739,1082,1146,1260,378,789,387},{258,1292,58,1101,753,1001,1276,671,608,471,1237,555,433,21,314,92,869,49,569,256,196,921,435,867,876,783,356,13,1033,813,165,664,1140,1023,532,800},{249,338,571,184,439,479,863,227,148,43,515,1149,1293,565,1040,872,39,31,281,732,177,1120,731,827,398,1088,819,706,155,1107,68,336,770,248,885,341},{1192,232,849,42,103,977,626,1295,48,713,1207,825,81,122,845,186,496,914,429,554,312,993,1274,659,924,420,211,1132,493,152,73,949,658,35,805,743},{690,971,605,1231,588,1196,293,904,1278,283,171,538,212,663,1078,353,1202,785,1106,595,616,120,1253,1277,769,111,8,159,521,1057,776,612,315,1112,34,1010},{1,987,455,723,1067,721,203,966,972,365,151,179,109,594,708,649,504,487,1282,1065,1136,438,444,44,143,403,1063,1261,192,961,627,524,128,653,456,28},{1048,701,618,839,279,856,364,76,277,762,548,11,923,513,607,628,579,737,24,958,1080,357,1109,711,877,970,613,257,448,154,749,413,1113,529,724,1247},{61,1203,572,780,519,846,712,883,265,1148,235,629,1286,377,919,198,1290,1079,474,740,224,251,984,570,651,56,1224,625,173,226,409,84,719,1201,116,709},{431,220,459,454,394,826,758,205,683,137,160,245,69,375,552,139,945,101,497,823,850,395,295,422,136,423,292,931,355,349,935,502,699,176,106,1019},{657,679,60,1081,748,301,940,332,1118,240,418,745,694,20,734,1008,102,1085,864,233,26,1090,1221,810,976,1144,832,1069,766,1223,1212,916,1226,1285,41,1068},{861,886,9,672,959,752,1022,333,149,1125,204,640,1030,980,1076,535,620,74,755,999,1122,1115,10,478,677,246,562,415,1172,1164,556,1165,480,412,537,1234},{1017,523,768,1198,509,6,1018,836,419,772,835,469,735,1174,900,359,316,803,1043,482,802,981,286,553,23,324,1131,557,933,1014,1003,808,40,330,1262,592},{209,530,1156,110,285,473,95,425,362,270,533,950,710,536,1243,1126,346,1189,164,868,1161,937,508,873,725,693,405,123,784,656,79,717,584,727,1129,77},{542,1153,499,880,491,3,1208,467,581,1255,1291,282,1264,894,1130,506,168,1296,760,1050,1139,632,131,1166,127,385,1049,138,988,296,510,1191,1071,589,1186,862},{1176,178,1005,464,1094,597,844,213,1098,298,88,63,1279,634,86,531,118,962,516,1064,1199,881,361,1195,446,915,1219,946,796,1183,637,388,908,676,85,83},{389,1062,992,1041,1250,121,591,715,622,223,373,882,1002,1259,1181,503,94,194,317,928,463,729,400,472,1215,147,326,424,1141,855,567,172,1179,1061,254,930},{289,956,252,746,610,141,416,1145,208,1044,96,1053,1074,161,982,799,461,590,1072,1214,645,944,642,91,1241,383,559,462,818,577,153,512,206,901,1187,775},{1075,545,1123,1205,294,183,134,1232,284,606,1257,633,1173,1099,318,1091,871,1209,214,158,534,764,1025,1251,814,736,511,38,726,1111,1000,197,580,119,80,1188},{396,1230,681,180,668,957,636,185,470,72,5,507,1045,700,1031,1011,193,834,843,801,1007,89,907,1206,113,754,1216,1184,765,603,70,310,71,201,540,837},{639,460,4,643,33,952,964,1150,327,756,1169,331,384,1159,718,238,47,237,250,691,998,576,878,1089,687,269,187,1128,859,1117,599,575,1066,1190,195,774},{441,242,913,879,261,1238,297,787,738,1015,1077,1135,955,611,1097,560,380,1284,107,675,874,390,1275,692,466,953,129,909,498,1036,350,526,1271,911,1006,1240},{447,50,782,105,716,481,1266,830,804,1244,345,965,1083,707,593,630,1287,674,288,912,354,751,45,517,299,686,1021,145,19,858,790,16,1032,2,255,1124},{696,518,773,990,328,313,351,1092,32,793,1084,985,1294,1227,781,934,108,334,90,831,230,259,1272,1073,771,623,888,585,402,401,817,453,684,906,899,996},{811,522,125,1288,1182,1034,525,1200,925,440,601,428,646,840,932,1193,1026,1158,563,941,1204,1154,1256,1105,411,234,974,1170,1246,181,146,918,300,406,162,126},{64,929,272,1060,458,306,942,133,989,27,200,229,268,321,222,806,967,1102,1100,549,468,853,1222,115,917,366,1270,791,53,635,1103,140,667,287,1168,573},{1178,598,948,399,1147,182,890,910,1171,278,1252,1039,1138,266,1185,1142,190,382,887,841,865,1086,1029,1055,655,893,828,100,779,484,449,812,157,271,685,665},{1027,150,169,821,393,979,884,1119,1265,1047,62,1229,243,638,795,892,360,397,98,340,631,1233,1009,688,652,490,986,564,695,761,267,427,260,1151,586,673},{1087,124,838,973,666,778,1220,600,1056,494,669,943,264,842,1263,794,1035,163,947,566,457,188,307,483,339,369,662,67,544,614,25,189,87,309,51,975},{1114,329,392,777,661,822,905,807,175,660,144,1217,983,486,174,938,66,547,358,55,897,624,759,436,939,443,262,763,82,543,891,37,370,344,551,1258},{617,348,824,93,678,1162,219,142,308,1042,895,302,342,1225,1163,546,417,430,228,391,730,381,870,1143,733,1245,968,1013,697,1254,371,767,587,263,558,477},{578,1108,728,367,1228,833,54,1137,275,52,539,322,704,857,978,514,1038,1116,1289,244,15,1239,1012,1236,404,1213,1016,475,117,410,963,757,920,541,374,1157},{1249,376,290,602,615,670,231,489,135,596,75,1051,582,1133,492,476,648,97,1218,22,829,323,407,1054,274,347,1267,1059,1180,1177,750,104,408,337,960,1283},{207,30,18,132,221,78,619,654,1052,273,851,57,1160,816,304,1280,520,682,792,17,451,236,36,319,650,797,216,1281,936,130,485,501,500,247,114,574}}
        )));
    }
    // this result in o(n) space complexity
    static int[] findMissingAndRepeatedValues(int[][] grid) {
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid.length;j++){
                map.put(grid[i][j], map.getOrDefault(grid[i][j], 0) + 1);
            }
        }
        int rep =-1;int mis=-1;
        for(int i=1;i<=grid.length*grid.length;i++){
            int count = map.get(i)==null?0:map.get(i);
            if(count ==0) mis =i;
            if(count==2) rep =i;
            if(rep!=-1 && mis!=-1)
                break;
        }
        return new int[]{rep,mis};
    }
    //o(1) space complexity
    static int[] missingAndRepeat(int[][] a) {
        long n = a.length* a.length; // size of the array
        // Find Sn and S2n:
        long SN = (n * (n + 1)) / 2;
        long S2N = (n * (n + 1) * (2 * n + 1)) / 6;
        // Calculate S and S2:
        long S = 0, S2 = 0;
        for (int i = 0; i <  a.length; i++) {
            for (int j = 0; j <  a.length; j++) {
                S += a[i][j];
                S2 += (long)a[i][j] * (long)a[i][j];
            }

        }

        //S-Sn = X-Y:
        long val1 = S - SN;

        // S2-S2n = X^2-Y^2:
        long val2 = S2 - S2N;

        //Find X+Y = (X^2-Y^2)/(X-Y):
        val2 = val2 / val1;

        //Find X and Y: X = ((X+Y)+(X-Y))/2 and Y = X-(X-Y),
        // Here, X-Y = val1 and X+Y = val2:
        long x = (val1 + val2) / 2;
        long y = x - val1;

        int[] ans = {(int)x, (int)y};
        return ans;
    }
}
